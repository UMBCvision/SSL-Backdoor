name: "AlexNet"
# no batch norm layers in this prototxt
# for rescaling
# ************************
# ***** DATA LAYER *******
# ************************
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {    phase: TRAIN  }
  transform_param {
    mirror: 1  # 1 = on, 0 = off
    crop_size: 224
  }
  data_param {
    source: "/home/spyros/D2TBdatasets/imagenet_imdb/ilsvrc12_train_lmdb"
    batch_size: 80
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {    phase: TEST  }
  transform_param {
    mirror: 0  # 1 = on, 0 = off
    crop_size: 224
  }
  data_param {
    source: "/home/spyros/D2TBdatasets/imagenet_imdb/ilsvrc12_val_lmdb"
    batch_size: 10
    backend: LMDB
  }
}
layer {
  type: "Input"
  name: "label"
  top: "label"
  include { phase: TRAIN }
  input_param { shape { dim: 80 dim: 1 } }
}
layer {
  type: "Input"
  name: "label"
  top: "label"
  include { phase: TEST }
  input_param { shape { dim: 1 dim: 1 } }
}
layer { 
  name: "conv1" type: "Convolution" bottom: "data" top: "conv1"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  convolution_param { num_output: 64 kernel_size: 11 stride: 4 pad: 2 }
}
layer {
  name: "relu1" type: "ReLU" bottom: "conv1" top: "conv1"
}
layer {
  name: "pool1" type: "Pooling" bottom: "conv1" top: "pool1"
  pooling_param {pool: MAX kernel_size: 3 stride: 2}
}
layer {
  name: "conv2" type: "Convolution" bottom: "pool1" top: "conv2"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { num_output: 192 pad: 2 kernel_size: 5}
}
layer { 
	name: "relu2" type: "ReLU" bottom: "conv2" top: "conv2" 
}
layer { 
  name: "pool2" type: "Pooling" bottom: "conv2" top: "pool2"
  pooling_param { pool: MAX kernel_size: 3 stride: 2 }
}
layer {
  name: "conv3" type: "Convolution" bottom: "pool2" top: "conv3"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { num_output: 384 pad: 1 kernel_size: 3 }
}
layer {
  name: "relu3" type: "ReLU" bottom: "conv3" top: "conv3"
}
layer {
  name: "conv4" type: "Convolution" bottom: "conv3" top: "conv4"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
}
layer {
  name: "relu4" type: "ReLU" bottom: "conv4" top: "conv4"
}
layer {
  name: "conv5" type: "Convolution" bottom: "conv4" top: "conv5"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
}
layer {
  name: "relu5" type: "ReLU" bottom: "conv5" top: "conv5"
}
layer {
  name: "pool5" type: "Pooling" bottom: "conv5" top: "pool5"
  pooling_param { pool: MAX kernel_size: 3 stride: 2 }
}
layer {
  name: "fc6" type: "InnerProduct" bottom: "pool5" top: "fc6"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param { num_output: 4096 }
}
layer {
  name: "relu6" type: "ReLU" bottom: "fc6" top: "fc6"
}
layer {
  name: "fc7" type: "InnerProduct" bottom: "fc6" top: "fc7"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param { num_output: 4096 }
}
layer {
  name: "relu7" type: "ReLU" bottom: "fc7" top: "fc7"
}
layer {
  name: "fc8_" type: "InnerProduct" bottom: "fc7" top: "fc8_"
  param {    lr_mult: 1    decay_mult: 1  }
  param {    lr_mult: 2    decay_mult: 0  }
  inner_product_param { 
    num_output: 1000
    weight_filler { type: "gaussian" std: 0.01}
    bias_filler { type: "constant" value: 1 }
  }
}
layer {
  name: "Softmax"
  type: "SoftmaxWithLoss"
  bottom: "fc8_"
  bottom: "label"
  top: "loss"
  loss_weight: 1
}
